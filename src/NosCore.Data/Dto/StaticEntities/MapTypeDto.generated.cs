//  __  _  __    __   ___ __  ___ ___  
// |  \| |/__\ /' _/ / _//__\| _ \ __| 
// | | ' | \/ |`._`.| \_| \/ | v / _|  
// |_|\__|\__/ |___/ \__/\__/|_|_\___| 
// 
// Copyright (C) 2019 - NosCore
// 
// NosCore is a free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or any later version.
// 
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
// 
// You should have received a copy of the GNU General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.

using System.ComponentModel.DataAnnotations;
using NosCore.Data.I18N;
using NosCore.Data.Dto;
using NosCore.Data.StaticEntities;
using NosCore.Data.DataAttributes;
using NosCore.Data.Enumerations.I18N;
using Mapster;

namespace NosCore.Data.StaticEntities
{
	/// <summary>
	/// Represents a DTO class for NosCore.Database.Entities.MapType.
	/// NOTE: This class is generated by GenerateDtos.tt
	/// </summary>
	public class MapTypeDto : IStaticDto
	{
		internal System.Collections.Generic.ICollection<DropDto> Drops { get; set; }

	 	[Key]
		public short MapTypeId { get; set; }

	 	internal System.Collections.Generic.ICollection<MapTypeMapDto> MapTypeMap { get; set; }

	 	public string MapTypeName { get; set; }

	 	public short PotionDelay { get; set; }

	 	internal RespawnMapTypeDto RespawnMapType { get; set; }

	 	public long? RespawnMapTypeId { get; set; }

	 	internal RespawnMapTypeDto ReturnMapType { get; set; }

	 	public long? ReturnMapTypeId { get; set; }

	 }
}