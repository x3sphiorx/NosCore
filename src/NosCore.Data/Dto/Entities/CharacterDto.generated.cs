//  __  _  __    __   ___ __  ___ ___  
// |  \| |/__\ /' _/ / _//__\| _ \ __| 
// | | ' | \/ |`._`.| \_| \/ | v / _|  
// |_|\__|\__/ |___/ \__/\__/|_|_\___| 
// 
// Copyright (C) 2019 - NosCore
// 
// NosCore is a free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or any later version.
// 
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
// 
// You should have received a copy of the GNU General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.

using System.ComponentModel.DataAnnotations;
using NosCore.Data.I18N;
using NosCore.Data.Dto;
using NosCore.Data.StaticEntities;
using NosCore.Data.DataAttributes;
using NosCore.Data.Enumerations.I18N;
using Mapster;

namespace NosCore.Data.Dto
{
	/// <summary>
	/// Represents a DTO class for NosCore.Database.Entities.Character.
	/// NOTE: This class is generated by GenerateDtos.tt
	/// </summary>
	public class CharacterDto : IDto
	{
		internal AccountDto Account { get; set; }

	 	public long AccountId { get; set; }

	 	public int Act4Dead { get; set; }

	 	public int Act4Kill { get; set; }

	 	public int Act4Points { get; set; }

	 	public int ArenaWinner { get; set; }

	 	public System.Guid? CurrentScriptId { get; set; }

	 	internal ScriptDto Script { get; set; }

	 	internal System.Collections.Generic.ICollection<BazaarItemDto> BazaarItem { get; set; }

	 	internal System.Collections.Generic.ICollection<MinilandDto> Miniland { get; set; }

	 	internal System.Collections.Generic.ICollection<CharacterActPartDto> CharacterActParts { get; set; }

	 	#nullable enable
		public string? Biography { get; set; } = "";
		#nullable disable
	 	public bool BuffBlocked { get; set; }

	 	[Key]
		public long CharacterId { get; set; }

	 	internal System.Collections.Generic.ICollection<CharacterRelationDto> CharacterRelation1 { get; set; }

	 	internal System.Collections.Generic.ICollection<CharacterRelationDto> CharacterRelation2 { get; set; }

	 	internal System.Collections.Generic.ICollection<CharacterSkillDto> CharacterSkill { get; set; }

	 	public NosCore.Packets.Enumerations.CharacterClassType Class { get; set; }

	 	public short Compliment { get; set; }

	 	public float Dignity { get; set; }

	 	public int Elo { get; set; }

	 	public bool EmoticonsBlocked { get; set; }

	 	public bool ExchangeBlocked { get; set; }

	 	public byte Faction { get; set; }

	 	internal System.Collections.Generic.ICollection<FamilyCharacterDto> FamilyCharacter { get; set; }

	 	public bool FamilyRequestBlocked { get; set; }

	 	public bool FriendRequestBlocked { get; set; }

	 	public NosCore.Packets.Enumerations.GenderType Gender { get; set; }

	 	public long Gold { get; set; }

	 	public bool GroupRequestBlocked { get; set; }

	 	public NosCore.Packets.Enumerations.HairColorType HairColor { get; set; }

	 	public NosCore.Packets.Enumerations.HairStyleType HairStyle { get; set; }

	 	public bool HeroChatBlocked { get; set; }

	 	public byte HeroLevel { get; set; }

	 	public long HeroXp { get; set; }

	 	public int Hp { get; set; }

	 	public bool HpBlocked { get; set; }

	 	internal System.Collections.Generic.ICollection<InventoryItemInstanceDto> Inventory { get; set; }

	 	public byte JobLevel { get; set; }

	 	public long JobLevelXp { get; set; }

	 	public byte Level { get; set; }

	 	public long LevelXp { get; set; }

	 	internal System.Collections.Generic.ICollection<MailDto> Mail { get; set; }

	 	internal System.Collections.Generic.ICollection<MailDto> Mail1 { get; set; }

	 	internal MapDto Map { get; set; }

	 	public short MapId { get; set; }

	 	public short MapX { get; set; }

	 	public short MapY { get; set; }

	 	public int MasterPoints { get; set; }

	 	public int MasterTicket { get; set; }

	 	internal System.Collections.Generic.ICollection<CharacterQuestDto> CharacterQuest { get; set; }

	 	internal System.Collections.Generic.ICollection<MateDto> Mate { get; set; }

	 	public byte MaxMateCount { get; set; }

	 	public bool MinilandInviteBlocked { get; set; }

	 	public bool MouseAimLock { get; set; }

	 	public int Mp { get; set; }

	 	#nullable enable
		public string? Prefix { get; set; } = "";
		#nullable disable
	 	public string Name { get; set; }

	 	public bool QuickGetUp { get; set; }

	 	internal System.Collections.Generic.ICollection<QuicklistEntryDto> QuicklistEntry { get; set; }

	 	public long RagePoint { get; set; }

	 	public long Reput { get; set; }

	 	internal System.Collections.Generic.ICollection<RespawnDto> Respawn { get; set; }

	 	public byte Slot { get; set; }

	 	public int SpAdditionPoint { get; set; }

	 	public int SpPoint { get; set; }

	 	public NosCore.Data.Enumerations.Character.CharacterState State { get; set; }

	 	internal System.Collections.Generic.ICollection<StaticBonusDto> StaticBonus { get; set; }

	 	internal System.Collections.Generic.ICollection<TitleDto> Title { get; set; }

	 	internal System.Collections.Generic.ICollection<StaticBuffDto> StaticBuff { get; set; }

	 	public int TalentLose { get; set; }

	 	public int TalentSurrender { get; set; }

	 	public int TalentWin { get; set; }

	 	public bool WhisperBlocked { get; set; }

	 	internal System.Collections.Generic.ICollection<WarehouseDto> Warehouses { get; set; }

	 }
}